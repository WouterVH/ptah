from pyramid.config import Configurator
from pyramid.asset import abspath_from_asset_spec

import ptah
from ptah.crowd.provider import CrowdUser, Session

# Your custom application permissions
from {{package}}.permissions import Manager

# Your custom application models
from {{package}}.root import APP_FACTORY

def main(global_config, **settings):
    """ This is your application startup.
    """
    config = Configurator(root_factory=APP_FACTORY, settings=settings)

    config.include('ptah')
    
    # config.ptah_init() #people want to see the guts.
    import transaction
    import sqlahelper
    
    # start ptah_init
    config.include('pyramid_tm')

    settings = config.registry.settings

    # exclude
    excludes = []
    if 'ptah.excludes' in settings:
        excludes.extend(s.strip()
                        for s in settings['ptah.excludes'].split())

    # load packages
    ptah.config.initialize(None, excludes, config.registry)
    
    # load settings
    ptah.config.initialize_settings(settings, config)

    # create sql tables
    Base = sqlahelper.get_base()
    Base.metadata.create_all()

    # send AppStarting event
    ptah.config.start(config)
    
    # end ptah_init
     
    # your application configuration
    root = APP_FACTORY()

    # admin user
    user = Session.query(CrowdUser).first()
    if user is None:
        user = CrowdUser('Admin', 'admin', 'admin@ptahproject.org', '12345')
        Session.add(user)

    # give manager role to admin
    if user.uri not in root.__local_roles__:
        root.__local_roles__[user.uri] = [Manager.id]
    
    ptah.authService.set_userid(user.uri)

    import transaction; transaction.commit()

    return config.make_wsgi_app()
