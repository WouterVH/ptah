from pyramid.config import Configurator
from pyramid.asset import abspath_from_asset_spec

import ptah
from ptah.crowd.provider import CrowdUser, Session

# Your custom application permissions
from {{package}}.permissions import Manager

# Import models
from {{package}} import models

class ApplicationRoot(ptah.cms.ApplicationRoot):
    """
    ApplicationRoot is a Container which has a record in database. 
    """
    __type__ = ptah.cms.Type('{{package}}-app',
        title='Application Root',
        description='A root for the {{package}} Application')

APP_FACTORY = ptah.cms.ApplicationFactory(
    ApplicationRoot,
    name='{{project}}', 
    title='{{project}} Application')

# WSGI Entry Point
def main(global_config, **settings):
    """ This is your application startup.
    """
    config = Configurator(root_factory=APP_FACTORY, settings=settings)

    config.include('ptah')
    config.include('pyramid_tm')
    
    # mcdonc says people want to see the guts.
    # you could use config.ptah_init() and be home by now
    
    # --- start ptah initialize ---
    config.ptah_initialize(('{{package}}', 'ptah'))
    config.commit()
    # --- end ptah.ptah_init() ---

    # create sql tables
    import sqlahelper
    Base = sqlahelper.get_base()
    Base.metadata.create_all()
     
    # your application configuration
    root = APP_FACTORY()

    # admin user
    user = Session.query(CrowdUser).first()
    if user is None:
        user = CrowdUser('Admin', 'admin', 'admin@ptahproject.org', '12345')
        Session.add(user)

    # give manager role to admin
    if user.uri not in root.__local_roles__:
        root.__local_roles__[user.uri] = [Manager.id]
    
    # set authcontext as admin user
    ptah.authService.set_userid(user.uri)

    # Bootstrap application data with some links; we use SQLAlchemy
    # directly so there are not application events being fired to apply owner
    
    links = {'sqlalchemy':'http://www.sqlalchemy.org/',
             'pyramid':'http://docs.pylonsproject.org/',
             'enfoldsystems':'http://www.enfoldsystems.com/',
             'bootstrap':'http://twitter.github.com/bootstrap/',
             'chameleon':'http://chameleon.repoze.org/',
             'sqlite':'http://www.sqlite.org/'}
             
    for name, url in links.items():
        if not Session.query(models.Link)\
               .filter(models.Link.href == url).all():
            link = models.Link(title=name,
                               href=url,
                               color='#0000ff')
            Session.add(link)

    # Not in HTTP request. Need to commit links to database manually.
    import transaction
    transaction.commit()

    # enable rest api
    ptah.enable_rest_api(config)

    # enable ptah-manage, see ptah.managers in .ini for users whom can access
    config.add_route(
        'ptah-manage','/ptah-manage/*traverse',
        factory=ptah.manage.PtahManageRoute, use_global_views=True)

    # we love them routes
    config.add_route('root', '/')    
    config.add_route('contact-us', '/contact-us.html')        
    config.add_route('edit-links', '/links/{id}/edit',
                     factory=models.factory, use_global_views=True)
        
    config.scan()

    return config.make_wsgi_app()
